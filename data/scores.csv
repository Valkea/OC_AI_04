Method,threshold,params,ROC AUC,PR AUC,F1 score,Accuracy,Precision,Recall,TP,TN,FP,FN,Training time,Inference time
DummyClassifier,,"{'random_state': [0], 'strategy': ['stratified']}",0.4905193236714976,0.07888462631429384,0.06657789613848202,0.8442222222222222,0.0639386189258312,0.06944444444444445,25,3774,366,335,3.165612535999969,0.002392693999979656
Basic LogisticRegression,,"{'random_state': [0], 'max_iter': [3000]}",0.7325127482555017,0.20025650633484407,0.0,0.9188888888888889,0.0,0.0,0,4135,5,360,31.121473308999953,0.017389009999988048
Basic LogisticRegression [w/thresholding],0.243,"{'random_state': [0], 'max_iter': [3000]}",0.7325127482555017,0.20025650633484407,0.21033868092691624,0.9015555555555556,0.2935323383084577,0.1638888888888889,59,3998,142,301,31.121473308999953,0.009908919999929822
Basic DecisionTreeClassifier,,{'random_state': [0]},0.5314613526570048,0.08763211719181868,0.13910761154855641,0.8542222222222222,0.1318407960199005,0.14722222222222223,53,3791,349,307,10.434390409999992,0.024089746999948147
Basic DecisionTreeClassifier [w/thresholding],0.999,{'random_state': [0]},0.5314613526570048,0.08763211719181868,0.13910761154855641,0.8542222222222222,0.1318407960199005,0.14722222222222223,53,3791,349,307,10.434390409999992,0.011188961000016207
Basic KNeighborsClassifier,,{},0.5436288915727321,0.08947014548234061,0.005181347150259068,0.9146666666666666,0.038461538461538464,0.002777777777777778,1,4115,25,359,20.63982240900009,9.646962199000086
Basic KNeighborsClassifier [w/thresholding],0.384,{},0.5436288915727321,0.08947014548234061,0.1023102310231023,0.8791111111111111,0.12601626016260162,0.08611111111111111,31,3925,215,329,20.63982240900009,4.575068146000035
Basic SupportVectorClassifier,,{'random_state': [0]},0.6433299785292539,0.1274563548633731,0.0,0.92,0.0,0.0,0,4140,0,360,3098.624092695,27.825511429000017
Basic SupportVectorClassifier [w/thresholding],0.292,{'random_state': [0]},0.6433299785292539,0.1274563548633731,0.0,0.9191111111111111,0.0,0.0,0,4136,4,360,3098.624092695,13.93317751199993
Basic RandomForestClassifier,,{'random_state': [0]},0.6947269189479335,0.16351570837659,0.0,0.92,0.0,0.0,0,4140,0,360,41.235836430999825,0.42338773099982063
Basic RandomForestClassifier [w/thresholding],0.68,{'random_state': [0]},0.6947269189479335,0.16351570837659,0.0,0.92,0.0,0.0,0,4140,0,360,41.235836430999825,0.2119165660001272
Basic XGBClassifier,,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1]}",0.7316062801932368,0.2106477683928173,0.005479452054794521,0.9193333333333333,0.2,0.002777777777777778,1,4136,4,359,54.95562760499979,0.06676540399985242
Basic XGBClassifier [w/thresholding],0.263,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1]}",0.7316062801932368,0.2106477683928173,0.18737270875763745,0.9113333333333333,0.3511450381679389,0.12777777777777777,46,4055,85,314,54.95562760499979,0.03159976100005224
Grid LogisticRegression,,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c66bbb290>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c66c27a10>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c66c27450>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c6abe9d50>}]",0.7333091787439614,0.20737983846975658,0.005494505494505495,0.9195555555555556,0.25,0.002777777777777778,1,4137,3,359,235.84249431800026,0.01623982699948101
Grid LogisticRegression [w/thresholding],0.232,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c66bbb290>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c66c27a10>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c66c27450>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c6abe9d50>}]",0.7333091787439614,0.20737983846975658,0.22066549912434325,0.9011111111111111,0.2985781990521327,0.175,63,3992,148,297,235.84249431800026,0.01024491600037436
Grid DecisionTreeClassifier,,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.664092860976919,0.1486551597708446,0.016042780748663103,0.9182222222222223,0.21428571428571427,0.008333333333333333,3,4129,11,357,4.151876951999839,0.019546449000699795
Grid DecisionTreeClassifier [w/thresholding],0.255,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.664092860976919,0.1486551597708446,0.1643835616438356,0.8915555555555555,0.21428571428571427,0.13333333333333333,48,3964,176,312,4.151876951999839,0.01031641600002331
Grid KNeighborsClassifier,,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.6122960279119699,0.11497456339936521,0.0,0.92,0.0,0.0,0,4140,0,360,215.6225561199999,21.645526313999653
Grid KNeighborsClassifier [w/thresholding],0.181,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.6122960279119699,0.11497456339936521,0.15407854984894256,0.8755555555555555,0.16887417218543047,0.14166666666666666,51,3889,251,309,215.6225561199999,9.929980351999802
Grid RandomForestClassifier,,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.7088768115942029,0.19126407106695667,0.0,0.92,0.0,0.0,0,4140,0,360,2982.5289307499997,0.23589963700032968
Grid RandomForestClassifier [w/thresholding],0.136,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.7088768115942029,0.19126407106695667,0.12093023255813953,0.916,0.37142857142857144,0.07222222222222222,26,4096,44,334,2982.5289307499997,0.11422323799979495
Grid XGBClassifier,,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7289925523349435,0.21391849090366427,0.026954177897574122,0.9197777777777778,0.45454545454545453,0.013888888888888888,5,4134,6,355,907.7797080180007,0.09604943399972399
Grid XGBClassifier [w/thresholding],0.31,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7289925523349435,0.21391849090366427,0.17596566523605148,0.9146666666666666,0.3867924528301887,0.11388888888888889,41,4075,65,319,907.7797080180007,0.0404656899991096
Balanced LogisticRegression,,"[{'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c64838e10>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c669e6ad0>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c66a9aa10>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c649b3a90>}]",0.7323356146001073,0.20314678824384516,0.24176954732510286,0.6724444444444444,0.14835858585858586,0.6527777777777778,235,2791,1349,125,365.02004355200006,0.02058632199987187
Balanced LogisticRegression [w/thresholding],0.552,"[{'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c64838e10>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c669e6ad0>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c66a9aa10>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c649b3a90>}]",0.7323356146001073,0.20314678824384516,0.253416149068323,0.7328888888888889,0.1632,0.5666666666666667,204,3094,1046,156,365.02004355200006,0.012579485999594908
Balanced DecisionTreeClassifier,,"{'class_weight': ['balanced'], 'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6756699543746646,0.15592665811526119,0.23007915567282322,0.6757777777777778,0.14201954397394137,0.6055555555555555,218,2823,1317,142,4.634595633000572,0.02611945500029833
Balanced DecisionTreeClassifier [w/thresholding],0.36,"{'class_weight': ['balanced'], 'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6756699543746646,0.15592665811526119,0.18966689326988445,0.4702222222222222,0.1080557707203718,0.775,279,1837,2303,81,4.634595633000572,0.009749942999405903
Balanced RandomForestClassifier,,"{'class_weight': ['balanced'], 'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.7137714707461085,0.1946186995993771,0.24065934065934064,0.6928888888888889,0.15,0.6083333333333333,219,2899,1241,141,2632.551464364,0.638533646999349
Balanced RandomForestClassifier [w/thresholding],0.539,"{'class_weight': ['balanced'], 'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.7137714707461085,0.1946186995993771,0.2589147286821705,0.7875555555555556,0.17956989247311828,0.4638888888888889,167,3377,763,193,2632.551464364,0.3151104190001206
Balanced XGBClassifier,,"{'scale_pos_weight': [11.481644640234949], 'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7198721819645734,0.20871667700934415,0.2402900051786639,0.674,0.14767663908338638,0.6444444444444445,232,2801,1339,128,910.7542451549998,0.06256178899820952
Balanced XGBClassifier [w/thresholding],0.404,"{'scale_pos_weight': [11.481644640234949], 'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7198721819645734,0.20871667700934415,0.20405405405405402,0.47644444444444445,0.11615384615384615,0.8388888888888889,302,1842,2298,58,910.7542451549998,0.028715619000649895
SMOT LogisticRegression,,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c648257d0>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c64825810>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c678f6f50>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c678f6290>}]",0.7194665861513688,0.1893045186793109,0.23605150214592274,0.6835555555555556,0.14627659574468085,0.6111111111111112,220,2856,1284,140,640.989510966001,0.021164656998735154
SMOT LogisticRegression [w/thresholding],0.638,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c648257d0>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c64825810>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c678f6f50>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f2c678f6290>}]",0.7194665861513688,0.1893045186793109,0.2675474814203138,0.8028888888888889,0.19036427732079905,0.45,162,3451,689,198,640.989510966001,0.0074524760002532275
SMOT DecisionTreeClassifier,,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.624585681696189,0.1279370103917055,0.18798334324806662,0.6966666666666667,0.11960635881907646,0.4388888888888889,158,2977,1163,202,8.121313165000174,0.02011087599930761
SMOT DecisionTreeClassifier [w/thresholding],0.233,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.624585681696189,0.1279370103917055,0.17701149425287355,0.3635555555555556,0.09871794871794871,0.8555555555555555,308,1328,2812,52,8.121313165000174,0.010002022001572186
SMOT KNeighborsClassifier,,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.5629579307568437,0.09332832008804995,0.1598272138228942,0.5677777777777778,0.09462915601023018,0.5138888888888888,185,2370,1770,175,925.0656540609998,40.65027253599874
SMOT KNeighborsClassifier [w/thresholding],0.98,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.5629579307568437,0.09332832008804995,0.10831234256926953,0.8426666666666667,0.09907834101382489,0.11944444444444445,43,3749,391,317,925.0656540609998,20.074906880001436
SMOT RandomForestClassifier,,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6686668008588298,0.1558551978126277,0.17600000000000002,0.8855555555555555,0.20754716981132076,0.1527777777777778,55,3930,210,305,6147.377601255001,0.8305570089978573
SMOT RandomForestClassifier [w/thresholding],0.596,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6686668008588298,0.1558551978126277,0.058823529411764705,0.9146666666666666,0.25,0.03333333333333333,12,4104,36,348,6147.377601255001,0.41585509000287857
SMOT XGBClassifier,,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7024241814278045,0.1906178772277669,0.04232804232804233,0.9195555555555556,0.4444444444444444,0.022222222222222223,8,4130,10,352,2067.1264211119997,0.14439210899945465
SMOT XGBClassifier [w/thresholding],0.5740000000000001,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7024241814278045,0.1906178772277669,0.026954177897574122,0.9197777777777778,0.45454545454545453,0.013888888888888888,5,4134,6,355,2067.1264211119997,0.06677120799940894
