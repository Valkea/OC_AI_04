Method,threshold,params,ROC AUC,PR AUC,F1 score,Accuracy,Precision,Recall,TP,TN,FP,FN,Training time,Inference time
DummyClassifier,,"{'random_state': [0], 'strategy': ['stratified']}",0.4905193236714976,0.07888462631429384,0.06657789613848202,0.8442222222222222,0.0639386189258312,0.06944444444444445,25,3774,366,335,1.2682514139960404,0.0020573540023178793
Basic LogisticRegression,,"{'random_state': [0], 'max_iter': [3000]}",0.7349671229200214,0.20027673156505701,0.005464480874316941,0.9191111111111111,0.16666666666666666,0.002777777777777778,1,4135,5,359,13.238042479999422,0.025822589996096212
Basic LogisticRegression [w/thresholding],0.14300000000000002,"{'random_state': [0], 'max_iter': [3000]}",0.7349671229200214,0.20027673156505701,0.2829827915869981,0.8333333333333334,0.21574344023323616,0.4111111111111111,148,3602,538,212,13.238042479999422,0.013837657003023196
Basic DecisionTreeClassifier,,{'random_state': [0]},0.5381642512077295,0.08995816354251562,0.15084525357607284,0.8548888888888889,0.14180929095354522,0.16111111111111112,58,3789,351,302,4.598010344001523,0.01865587600332219
Basic DecisionTreeClassifier [w/thresholding],0.999,{'random_state': [0]},0.5381642512077295,0.08995816354251562,0.15084525357607284,0.8548888888888889,0.14180929095354522,0.16111111111111112,58,3789,351,302,4.598010344001523,0.005792887997813523
Basic KNeighborsClassifier,,{},0.5549590713902308,0.09150577322041968,0.00516795865633075,0.9144444444444444,0.037037037037037035,0.002777777777777778,1,4114,26,359,9.845080464001512,6.625709537998773
Basic KNeighborsClassifier [w/thresholding],0.2,{},0.5549590713902308,0.09150577322041968,0.16666666666666666,0.66,0.10365853658536585,0.425,153,2817,1323,207,9.845080464001512,3.214133273999323
Basic SupportVectorClassifier,,{'random_state': [0]},0.6515908480944712,0.13252388125869397,0.0,0.92,0.0,0.0,0,4140,0,360,1489.974687353999,21.168804158005514
Basic SupportVectorClassifier [w/thresholding],0.095,{'random_state': [0]},0.6515908480944712,0.13252388125869397,0.21167883211678828,0.76,0.14356435643564355,0.4027777777777778,145,3275,865,215,1489.974687353999,9.44370032799634
Basic RandomForestClassifier,,{'random_state': [0]},0.677500335480408,0.1740492800157924,0.0,0.92,0.0,0.0,0,4140,0,360,10.798586329998216,0.12310647500271443
Basic RandomForestClassifier [w/thresholding],0.52,{'random_state': [0]},0.677500335480408,0.1740492800157924,0.0,0.92,0.0,0.0,0,4140,0,360,10.798586329998216,0.061362139000266325
Basic XGBClassifier,,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1]}",0.714561862587225,0.18970435534527597,0.06451612903225806,0.9162222222222223,0.3023255813953488,0.03611111111111111,13,4110,30,347,34.182362428997294,0.041983152004831936
Basic XGBClassifier [w/thresholding],0.268,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1]}",0.714561862587225,0.18970435534527597,0.21658206429780036,0.8971111111111111,0.27705627705627706,0.17777777777777778,64,3973,167,296,34.182362428997294,0.018236693998915143
Grid LogisticRegression,,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4a5ed30>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4a98f10>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4a98520>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4a98940>}]",0.7333595008051529,0.2086168283382811,0.0,0.9193333333333333,0.0,0.0,0,4137,3,360,95.60765873100172,0.011705717995937448
Grid LogisticRegression [w/thresholding],0.138,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4a5ed30>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4a98f10>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4a98520>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4a98940>}]",0.7333595008051529,0.2086168283382811,0.27893738140417457,0.8311111111111111,0.21181556195965417,0.4083333333333333,147,3593,547,213,95.60765873100172,0.004115411997190677
Grid DecisionTreeClassifier,,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6595833333333333,0.1460026551360224,0.01084010840108401,0.9188888888888889,0.2222222222222222,0.005555555555555556,2,4133,7,358,1.8651810369992745,0.012253001004864927
Grid DecisionTreeClassifier [w/thresholding],0.158,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6595833333333333,0.1460026551360224,0.22444889779559116,0.828,0.1755485893416928,0.3111111111111111,112,3614,526,248,1.8651810369992745,0.00518262799596414
Grid KNeighborsClassifier,,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.6133803005904456,0.11238444512122422,0.0,0.92,0.0,0.0,0,4140,0,360,150.422210429002,6.968164555997646
Grid KNeighborsClassifier [w/thresholding],0.151,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.6133803005904456,0.11238444512122422,0.17317845828933476,0.826,0.13969335604770017,0.22777777777777777,82,3635,505,278,150.422210429002,3.272847610001918
Grid RandomForestClassifier,,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.706874664519592,0.19065863133170288,0.0,0.92,0.0,0.0,0,4140,0,360,730.6186185740007,0.1695386760038673
Grid RandomForestClassifier [w/thresholding],0.108,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.706874664519592,0.19065863133170288,0.2526315789473684,0.858,0.21818181818181817,0.3,108,3753,387,252,730.6186185740007,0.05720639599894639
Grid XGBClassifier,,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7314110305958131,0.21157618629166025,0.026809651474530828,0.9193333333333333,0.38461538461538464,0.013888888888888888,5,4132,8,355,399.35007499999483,0.03991592199599836
Grid XGBClassifier [w/thresholding],0.188,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7314110305958131,0.21157618629166025,0.2795698924731182,0.8808888888888889,0.2708333333333333,0.28888888888888886,104,3860,280,256,399.35007499999483,0.020723539993923623
Balanced LogisticRegression,,"[{'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4ae3760>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4ae3dc0>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4ae3eb0>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4ade340>}]",0.7323899624261943,0.208005477672891,0.24049331963001025,0.6715555555555556,0.14754098360655737,0.65,234,2788,1352,126,110.033550457003,0.03755617400020128
Balanced LogisticRegression [w/thresholding],0.632,"[{'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4ae3760>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4ae3dc0>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4ae3eb0>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4ade340>}]",0.7323899624261943,0.208005477672891,0.2761816496756256,0.8264444444444444,0.20723226703755215,0.41388888888888886,149,3570,570,211,110.033550457003,0.0043591049980022945
Balanced DecisionTreeClassifier,,"{'class_weight': ['balanced'], 'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6757222893183039,0.14936486259411536,0.21974522292993634,0.6733333333333333,0.13582677165354332,0.575,207,2823,1317,153,1.8741693970005144,0.00943080399883911
Balanced DecisionTreeClassifier [w/thresholding],0.664,"{'class_weight': ['balanced'], 'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6757222893183039,0.14936486259411536,0.22304147465437785,0.8126666666666666,0.16689655172413792,0.33611111111111114,121,3536,604,239,1.8741693970005144,0.005498049999005161
Balanced RandomForestClassifier,,"{'class_weight': ['balanced'], 'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.7139734299516908,0.19246275571180452,0.24004364429896344,0.6904444444444444,0.1493550577053632,0.6111111111111112,220,2887,1253,140,647.0564370009961,0.4474712500013993
Balanced RandomForestClassifier [w/thresholding],0.5640000000000001,"{'class_weight': ['balanced'], 'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.7139734299516908,0.19246275571180452,0.25951219512195123,0.8313333333333334,0.2,0.36944444444444446,133,3608,532,227,647.0564370009961,0.23437840900442097
Balanced XGBClassifier,,"{'scale_pos_weight': [11.481644640234949], 'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7212453032742888,0.20639356661140573,0.2376751427088739,0.6735555555555556,0.14613911933631143,0.6361111111111111,229,2802,1338,131,427.20118342799833,0.03999424799985718
Balanced XGBClassifier [w/thresholding],0.656,"{'scale_pos_weight': [11.481644640234949], 'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7212453032742888,0.20639356661140573,0.2657004830917874,0.8648888888888889,0.23504273504273504,0.3055555555555556,110,3782,358,250,427.20118342799833,0.019442231001448818
SMOT LogisticRegression,,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4db41f0>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4ad5940>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4ad5d60>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4aa3940>}]",0.7171141975308641,0.18923285732746653,0.23906083244397014,0.6831111111111111,0.14795244385733158,0.6222222222222222,224,2850,1290,136,258.7757884879975,0.02216177000082098
SMOT LogisticRegression [w/thresholding],0.7030000000000001,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4db41f0>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4ad5940>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbd4ad5d60>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7fbbf4aa3940>}]",0.7171141975308641,0.18923285732746653,0.26859504132231404,0.8426666666666667,0.2138157894736842,0.3611111111111111,130,3662,478,230,258.7757884879975,0.004114834999199957
SMOT DecisionTreeClassifier,,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6401506307031669,0.13378815099208238,0.20485494375370042,0.7015555555555556,0.13017306245297217,0.48055555555555557,173,2984,1156,187,3.1867195810045814,0.011773086996981874
SMOT DecisionTreeClassifier [w/thresholding],0.655,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6401506307031669,0.13378815099208238,0.21626297577854675,0.7986666666666666,0.157035175879397,0.3472222222222222,125,3469,671,235,3.1867195810045814,0.005284660997858737
SMOT KNeighborsClassifier,,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.5686597557702631,0.09672126232447258,0.16631667366652667,0.5588888888888889,0.09797130133597229,0.55,198,2317,1823,162,516.1952404069962,13.181757236998237
SMOT KNeighborsClassifier [w/thresholding],0.999,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.5686597557702631,0.09672126232447258,0.12577065351418001,0.8424444444444444,0.1130820399113082,0.14166666666666666,51,3740,400,309,516.1952404069962,6.13031105799746
SMOT RandomForestClassifier,,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6674436392914654,0.15604724994063812,0.1709677419354839,0.8857777777777778,0.20384615384615384,0.14722222222222223,53,3933,207,307,1556.3992090350002,0.3711090979995788
SMOT RandomForestClassifier [w/thresholding],0.501,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6674436392914654,0.15604724994063812,0.17124394184168013,0.886,0.20463320463320464,0.14722222222222223,53,3934,206,307,1556.3992090350002,0.15069928899902152
SMOT XGBClassifier,,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7169940955448202,0.20551564159399016,0.06718346253229972,0.9197777777777778,0.48148148148148145,0.03611111111111111,13,4126,14,347,967.8997146379988,0.05386241499945754
SMOT XGBClassifier [w/thresholding],0.264,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7169940955448202,0.20551564159399016,0.2110726643598616,0.8986666666666666,0.2798165137614679,0.16944444444444445,61,3983,157,299,967.8997146379988,0.028268413996556774
