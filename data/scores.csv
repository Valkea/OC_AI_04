Method,threshold,params,ROC AUC,PR AUC,F1 score,Accuracy,Precision,Recall,TP,TN,FP,FN,Training time,Inference time
DummyClassifier,,"{'random_state': [0], 'strategy': ['stratified']}",0.4905193236714976,0.07888462631429384,0.06657789613848202,0.8442222222222222,0.0639386189258312,0.06944444444444445,25,3774,366,335,1.450479561011889,0.0021779699891339988
Basic LogisticRegression,,"{'random_state': [0], 'max_iter': [3000]}",0.7349671229200214,0.20027673156505701,0.005464480874316941,0.9191111111111111,0.16666666666666666,0.002777777777777778,1,4135,5,359,15.905747466997127,0.03082381299464032
Basic LogisticRegression [w/thresholding],0.244,"{'random_state': [0], 'max_iter': [3000]}",0.7349671229200214,0.20027673156505701,0.20430107526881722,0.9013333333333333,0.2878787878787879,0.15833333333333333,57,3999,141,303,15.905747466997127,0.007977340996148996
Basic DecisionTreeClassifier,,{'random_state': [0]},0.5381642512077295,0.08995816354251562,0.15084525357607284,0.8548888888888889,0.14180929095354522,0.16111111111111112,58,3789,351,302,4.897110596008133,0.011711593993823044
Basic DecisionTreeClassifier [w/thresholding],0.999,{'random_state': [0]},0.5381642512077295,0.08995816354251562,0.15084525357607284,0.8548888888888889,0.14180929095354522,0.16111111111111112,58,3789,351,302,4.897110596008133,0.005646703997626901
Basic KNeighborsClassifier,,{},0.5549590713902308,0.09150577322041968,0.00516795865633075,0.9144444444444444,0.037037037037037035,0.002777777777777778,1,4114,26,359,10.056602569995448,6.66374191500654
Basic KNeighborsClassifier [w/thresholding],0.38,{},0.5549590713902308,0.09150577322041968,0.09966777408637874,0.8795555555555555,0.12396694214876033,0.08333333333333333,30,3928,212,330,10.056602569995448,3.5244618360011373
Basic SupportVectorClassifier,,{'random_state': [0]},0.6515908480944712,0.13252388125869397,0.0,0.92,0.0,0.0,0,4140,0,360,1573.2244553950004,21.79326625999238
Basic SupportVectorClassifier [w/thresholding],0.302,{'random_state': [0]},0.6515908480944712,0.13252388125869397,0.0,0.9193333333333333,0.0,0.0,0,4137,3,360,1573.2244553950004,9.921899960012524
Basic RandomForestClassifier,,{'random_state': [0]},0.677500335480408,0.1740492800157924,0.0,0.92,0.0,0.0,0,4140,0,360,11.689176839994616,0.11120841599768028
Basic RandomForestClassifier [w/thresholding],0.68,{'random_state': [0]},0.677500335480408,0.1740492800157924,0.0,0.92,0.0,0.0,0,4140,0,360,11.689176839994616,0.05381022700748872
Basic XGBClassifier,,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1]}",0.714561862587225,0.18970435534527597,0.06451612903225806,0.9162222222222223,0.3023255813953488,0.03611111111111111,13,4110,30,347,60.783556604990736,0.04357689501193818
Basic XGBClassifier [w/thresholding],0.553,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1]}",0.714561862587225,0.18970435534527597,0.04627249357326478,0.9175555555555556,0.3103448275862069,0.025,9,4120,20,351,60.783556604990736,0.021325780006009154
Grid LogisticRegression,,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f5394c0>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f539e20>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f539c40>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f539c70>}]",0.7333595008051529,0.2086168283382811,0.0,0.9193333333333333,0.0,0.0,0,4137,3,360,103.91279869500431,0.009706742988782935
Grid LogisticRegression [w/thresholding],0.227,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f5394c0>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f539e20>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f539c40>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f539c70>}]",0.7333595008051529,0.2086168283382811,0.21746880570409982,0.9024444444444445,0.3034825870646766,0.16944444444444445,61,4000,140,299,103.91279869500431,0.003943585004890338
Grid DecisionTreeClassifier,,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6595833333333333,0.1460026551360224,0.01084010840108401,0.9188888888888889,0.2222222222222222,0.005555555555555556,2,4133,7,358,1.9186677060060902,0.01443821300927084
Grid DecisionTreeClassifier [w/thresholding],0.233,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6595833333333333,0.1460026551360224,0.1641025641025641,0.8913333333333333,0.21333333333333335,0.13333333333333333,48,3963,177,312,1.9186677060060902,0.004947577006532811
Grid KNeighborsClassifier,,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.6133803005904456,0.11238444512122422,0.0,0.92,0.0,0.0,0,4140,0,360,183.78728829800093,7.763917623000452
Grid KNeighborsClassifier [w/thresholding],0.181,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.6133803005904456,0.11238444512122422,0.13533834586466165,0.8722222222222222,0.14754098360655737,0.125,45,3880,260,315,183.78728829800093,3.288822667003842
Grid RandomForestClassifier,,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.706874664519592,0.19065863133170288,0.0,0.92,0.0,0.0,0,4140,0,360,765.8211270820029,0.2981049759982852
Grid RandomForestClassifier [w/thresholding],0.134,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.706874664519592,0.19065863133170288,0.12244897959183673,0.914,0.3333333333333333,0.075,27,4086,54,333,765.8211270820029,0.04606494400650263
Grid XGBClassifier,,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7314110305958131,0.21157618629166025,0.026809651474530828,0.9193333333333333,0.38461538461538464,0.013888888888888888,5,4132,8,355,489.98715804300446,0.05386996301240288
Grid XGBClassifier [w/thresholding],0.31,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7314110305958131,0.21157618629166025,0.16919739696312364,0.9148888888888889,0.38613861386138615,0.10833333333333334,39,4078,62,321,489.98715804300446,0.01670248300069943
Balanced LogisticRegression,,"[{'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f4565b0>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f4568e0>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f456bb0>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f456ee0>}]",0.7323899624261943,0.208005477672891,0.24049331963001025,0.6715555555555556,0.14754098360655737,0.65,234,2788,1352,126,113.96762486400257,0.017478291993029416
Balanced LogisticRegression [w/thresholding],0.363,"[{'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f4565b0>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f4568e0>}, {'class_weight': ['balanced'], 'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f456bb0>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f879f456ee0>}]",0.7323899624261943,0.208005477672891,0.19980787704130643,0.44466666666666665,0.11292073832790445,0.8666666666666667,312,1689,2451,48,113.96762486400257,0.004195237997919321
Balanced DecisionTreeClassifier,,"{'class_weight': ['balanced'], 'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6757222893183039,0.14936486259411536,0.21974522292993634,0.6733333333333333,0.13582677165354332,0.575,207,2823,1317,153,2.088412030003383,0.009300080011598766
Balanced DecisionTreeClassifier [w/thresholding],0.398,"{'class_weight': ['balanced'], 'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6757222893183039,0.14936486259411536,0.20197418375094914,0.5328888888888889,0.1169744942832014,0.7388888888888889,266,2132,2008,94,2.088412030003383,0.005055001005530357
Balanced RandomForestClassifier,,"{'class_weight': ['balanced'], 'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.7139734299516908,0.19246275571180452,0.24004364429896344,0.6904444444444444,0.1493550577053632,0.6111111111111112,220,2887,1253,140,679.0258379040024,0.33464319800259545
Balanced RandomForestClassifier [w/thresholding],0.538,"{'class_weight': ['balanced'], 'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.7139734299516908,0.19246275571180452,0.2637703646237393,0.7891111111111111,0.18299246501614638,0.4722222222222222,170,3381,759,190,679.0258379040024,0.15626987599534914
Balanced XGBClassifier,,"{'scale_pos_weight': [11.481644640234949], 'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7212453032742888,0.20639356661140573,0.2376751427088739,0.6735555555555556,0.14613911933631143,0.6361111111111111,229,2802,1338,131,469.33552701699955,0.03323691900004633
Balanced XGBClassifier [w/thresholding],0.47300000000000003,"{'scale_pos_weight': [11.481644640234949], 'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7212453032742888,0.20639356661140573,0.22591055786076533,0.6268888888888889,0.13543394140409065,0.6805555555555556,245,2576,1564,115,469.33552701699955,0.011154420004459098
SMOT LogisticRegression,,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f87d06aa370>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f87d0843100>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f87d06aaa90>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f87d06aac10>}]",0.7171141975308641,0.18923285732746653,0.23906083244397014,0.6831111111111111,0.14795244385733158,0.6222222222222222,224,2850,1290,136,245.30957904701063,0.014649556003860198
SMOT LogisticRegression [w/thresholding],0.444,"[{'random_state': [0], 'max_iter': [3000], 'solver': ['lbfgs'], 'penalty': ['l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f87d06aa370>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['liblinear'], 'penalty': ['l1', 'l2'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f87d0843100>}, {'random_state': [0], 'max_iter': [3000], 'solver': ['saga'], 'penalty': ['elasticnet'], 'C': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f87d06aaa90>, 'l1_ratio': <scipy.stats._distn_infrastructure.rv_frozen object at 0x7f87d06aac10>}]",0.7171141975308641,0.18923285732746653,0.22345337026777473,0.6262222222222222,0.13399778516057587,0.6722222222222223,242,2576,1564,118,245.30957904701063,0.004198947004624642
SMOT DecisionTreeClassifier,,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6401506307031669,0.13378815099208238,0.20485494375370042,0.7015555555555556,0.13017306245297217,0.48055555555555557,173,2984,1156,187,3.5794893800048158,0.009563024999806657
SMOT DecisionTreeClassifier [w/thresholding],0.366,"{'random_state': [0], 'criterion': ['gini', 'entropy'], 'splitter': ['best', 'random'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'min_samples_leaf': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'max_features': [None, 'sqrt', 'log2'], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6401506307031669,0.13378815099208238,0.19970631424375918,0.6366666666666667,0.12121212121212122,0.5666666666666667,204,2661,1479,156,3.5794893800048158,0.005129283003043383
SMOT KNeighborsClassifier,,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.5686597557702631,0.09672126232447258,0.16631667366652667,0.5588888888888889,0.09797130133597229,0.55,198,2317,1823,162,579.920420401002,13.777226992999204
SMOT KNeighborsClassifier [w/thresholding],0.981,"{'n_neighbors': range(1, 35, 2), 'leaf_size': range(10, 100, 10)}",0.5686597557702631,0.09672126232447258,0.12577065351418001,0.8424444444444444,0.1130820399113082,0.14166666666666666,51,3740,400,309,579.920420401002,6.389692761993501
SMOT RandomForestClassifier,,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6674436392914654,0.15604724994063812,0.1709677419354839,0.8857777777777778,0.20384615384615384,0.14722222222222223,53,3933,207,307,1690.073142506997,0.4647893969959114
SMOT RandomForestClassifier [w/thresholding],0.598,"{'random_state': [0], 'n_estimators': array([ 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
       125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
       138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
       151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
       164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
       177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
       190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
       203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
       216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
       229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
       242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
       255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
       268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280,
       281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
       294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306,
       307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
       320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332,
       333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
       346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358,
       359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
       372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
       385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
       398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
       411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
       424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
       437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
       450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462,
       463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
       476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
       489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499]), 'criterion': ['gini', 'entropy'], 'max_depth': [None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 'max_features': [None, 'sqrt', 'log2'], 'bootstrap': [True, False], 'ccp_alpha': [0.0, 0.1, 0.01, 0.001]}",0.6674436392914654,0.15604724994063812,0.0687960687960688,0.9157777777777778,0.2978723404255319,0.03888888888888889,14,4107,33,346,1690.073142506997,0.1674384910002118
SMOT XGBClassifier,,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7169940955448202,0.20551564159399016,0.06718346253229972,0.9197777777777778,0.48148148148148145,0.03611111111111111,13,4126,14,347,1104.4231999090116,0.06061222999414895
SMOT XGBClassifier [w/thresholding],0.5660000000000001,"{'seed': [0], 'objective': ['binary:logistic'], 'eval_metric': ['auc'], 'nthread': [-1], 'max_depth': range(2, 10), 'n_estimators': range(60, 220, 20), 'learning_rate': [None, 0.1, 0.01, 0.05]}",0.7169940955448202,0.20551564159399016,0.048,0.9206666666666666,0.6,0.025,9,4134,6,351,1104.4231999090116,0.030943778998334892
